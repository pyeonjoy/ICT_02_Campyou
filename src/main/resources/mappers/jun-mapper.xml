<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jun">
	<select id="getCampInfo" resultType="cvo">
		select * from camp_list where contentid = #{contentid}
	</select>
	<insert id="addReview" parameterType="rvo">
		insert into camp_review(member_idx,contentid,member_nickname,r_comment,rating,r_regdate)
		values(#{member_idx},#{contentid},#{member_nickname},#{r_comment},#{rating},sysdate())
	</insert>
	<select id="loadReview" resultType="rvo">
		select c.review_idx, c.member_idx,c.contentid,c.member_nickname,c.r_comment,c.rating,c.r_regdate,m.member_img as member_img
		from camp_review c 
		join members m ON c.member_idx = m.member_idx
		where contentid = #{contentid}
	</select>
	<update id="updateHit" parameterType="cvo">
		update camp_list set hit= hit+1 where contentid = #{contentid}
	</update>
	<insert id="addHeart" parameterType="Map">
		insert into camp_heart (member_idx,contentid)
		values(#{member_idx},#{contentid})
	</insert>
	<select id="checkHeart" parameterType="Map" resultType="String">
		select * from camp_heart where member_idx=#{member_idx} and contentid = #{contentid}	
	</select>
	<delete id="delHeart" parameterType="Map">
		delete from camp_heart where member_idx=#{member_idx} and contentid = #{contentid}
	</delete>
<select id="searchDetail" parameterType="Map" resultType="cvo">
    select *
    from camp_list 
    <where>
        <if test="s_sido != null and s_sido != ''">
    		AND donm = #{s_sido}
    	</if>
    	<if test="s_sigungu != null and s_sigungu != ''">
    		AND sigungunm = #{s_sigungu}
    	</if>
        <if test="keyword != null and keyword != ''">
            AND (facltnm LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="lctCl != null and lctCl != ''">
            AND lctCl = #{lctCl}
        </if>
        <if test="induty != null and induty != ''">
            AND induty = #{induty}
        </if>
        <if test="sbrscl != null and sbrscl != ''">
            AND sbrscl = #{sbrscl}
        </if>
    </where>
			limit #{limit} offset #{offset}
	</select>
<select id="searchCount" parameterType="Map" resultType="int">
    select count(*)
    from camp_list 
    <where>
        <if test="s_sido != null and s_sido != ''">
    		AND donm = #{s_sido}
    	</if>
    	<if test="s_sigungu != null and s_sigungu != ''">
    		AND sigungunm = #{s_sigungu}
    	</if>
        <if test="keyword != null and keyword != ''">
            AND (facltnm LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="lctCl != null and lctCl != ''">
            AND lctCl = #{lctCl}
        </if>
        <if test="induty != null and induty != ''">
            AND induty = #{induty}
        </if>
        <if test="sbrscl != null and sbrscl != ''">
            AND sbrscl = #{sbrscl}
        </if>
    </where>
</select>
<select id="countReview" parameterType="String" resultType="int">
	select count(*) from camp_review where contentid = #{contentid}
</select>
<select id="addRating" parameterType="String" resultType="int">
	select sum(rating) from camp_review where contentid = #{contentid}
</select>
<select id="getUseFAQLoad" parameterType="a2vo" resultType="map">
	select * from faq limit #{limit} offset #{offset}
</select>
<select id="getPromiseFAQLoad" parameterType="a2vo" resultType="map">
	select * from faq2 limit #{limit} offset #{offset}
</select>
<insert id ="writeUserFAQ" parameterType="a2vo">
	insert into faq(faq_title,faq_content)
	values(#{faq_title},#{faq_content})
</insert>
<insert id ="writePromiseFAQ" parameterType="a2vo">
	insert into faq2(faq_title,faq_content)
	values(#{faq_title},#{faq_content})
</insert>
<update id="StatusUserChange">
    update faq
    set faq_status = case
        when faq_status = '0' then '1'
        when faq_status = '1' then '0'
    end
    where faq_idx in
    <foreach collection="list" item="faq_idx" open="(" close=")" separator=",">
        #{faq_idx}
    </foreach>
</update>

<update id="StatusPromiseChange">
    update faq2
    set faq_status = case
        when faq_status = '0' then '1'
        when faq_status = '1' then '0'
    end
    where faq_idx in
    <foreach collection="list" item="faq_idx" open="(" close=")" separator=",">
        #{faq_idx}
    </foreach>
</update>
<select id="getUseFAQCount" resultType="int">
	select count(*) from faq
</select>
<select id="getPromiseFAQCount" resultType="int">
	select count(*) from faq2
</select>
<select id="loadInquiryCount" resultType="int">
	select count(*) from qna
</select>
<select id="loadInquiry" parameterType="a2vo" resultType="map">
    select q.qna_idx, q.member_idx, q.qna_title, q.qna_content, 
           date_format(q.qna_date, '%Y-%m-%d') as qna_date, q.qna_status, 
           m.member_nickname as member_nickname
    from qna q
    join members m ON q.member_idx = m.member_idx
    where q.member_idx = m.member_idx
    order by q.qna_status ASC
    limit #{limit} offset #{offset}
</select>

<select id ="SearchInquiryCount" parameterType="Map" resultType="int">
    select count(*)
    from qna q
    join members m ON q.member_idx = m.member_idx
    <where>
        <if test="keywordInput != null and searchType != null">
            and
            <choose>
                <when test="searchType == 'nickname'">
                    member_nickname like concat('%', #{keywordInput}, '%')
                </when>
                <when test="searchType == 'content'">
                    qna_content like concat('%', #{keywordInput}, '%')
                </when>
            </choose>
        </if>
    </where>
</select>

<select id="SearchInquiry" parameterType="a2vo" resultType="map">
    select q.qna_idx, q.member_idx, q.qna_title, q.qna_content, 
           date_format(q.qna_date, '%Y-%m-%d') as qna_date, q.qna_status, 
           m.member_nickname as member_nickname
    from qna q
    join members m ON q.member_idx = m.member_idx
    <where>
        <if test="keywordInput != null and searchType != null">
            and
            <choose>
                <when test="searchType == 'nickname'">
                    member_nickname like concat('%', #{keywordInput}, '%')
                </when>
                <when test="searchType == 'content'">
                    qna_content like concat('%', #{keywordInput}, '%')
                </when>
            </choose>
        </if>
    </where>
    limit #{limit} offset #{offset}
</select>
<select id="getInquiryDetail" parameterType="String" resultType="a2vo">
    select q.qna_idx, q.member_idx, q.qna_title, q.qna_content, 
           date_format(q.qna_date, '%Y-%m-%d') as qna_date, q.qna_status, 
           m.member_nickname as member_nickname
    from qna q
    join members m ON q.member_idx = m.member_idx
    where q.member_idx = m.member_idx and qna_idx = #{qna_idx}
</select>
<insert id ="redirect_qna" parameterType="Map">
	insert into qna_re(qna_idx,qna_content,qna_date)
	values(#{qna_idx},#{qna_content},sysdate())
</insert>
<update id="updateStatus">
	update qna set qna_status = 1 where qna_idx = #{qna_idx} 
</update>
<select id="w_board_count" parameterType="a2vo" resultType="int">
	select count(*) from board_with
</select>
<select id="loadBoardList" parameterType="a2vo" resultType="map">
	select w.t_idx, w.member_idx, w.t_subject, w.t_content, w.t_campname,w.t_regdate,t_active, m.member_nickname as member_nickname
	from board_with w
	join members m ON w.member_idx = m.member_idx
	where w.member_idx = m.member_idx
	limit #{limit} offset #{offset}
</select>

<select id="w_board_detail" parameterType="String" resultType="a2vo">
	select w.t_idx, w.member_idx, w.t_subject, w.t_content, w.t_campname,w.t_regdate,t_active, m.member_nickname as member_nickname
	from board_with w
	join members m ON w.member_idx = m.member_idx
	where w.member_idx = m.member_idx and w.t_idx = #{t_idx}
</select>
    <select id="w_board_detail_comment" parameterType="String" resultType="a2vo">
	select c.t_idx, c.member_idx, c.wc_content, c.wc_idx,c.wc_regdate, c.wc_active,c.wc_groups,c.wc_step,c.wc_lev, m.member_nickname as member_nickname
	from board_with_comment c
	join members m ON c.member_idx = m.member_idx
	where c.member_idx = m.member_idx and c.t_idx = #{t_idx}
	order by c.wc_groups, c.wc_step, c.wc_lev DESC;
    </select>
<update id="hide_post">
	update board_with set t_active = 1 where t_idx = #{t_idx} 
</update>
<update id="show_post">
	update board_with set t_active = 0 where t_idx = #{t_idx} 
</update>
<update id="comment_hide">
	update board_with_comment set wc_active = 1 where wc_idx = #{wc_idx} 
</update>
<update id="comment_show">
	update board_with_comment set wc_active = 0 where wc_idx = #{wc_idx} 
</update>
<select id ="Search_W_board_count" parameterType="Map" resultType="int">
    select count(*)
    from board_with w
    join members m ON w.member_idx = m.member_idx
    <where>
        <if test="keywordInput != null and searchType != null">
            and
            <choose>
                <when test="searchType == 'nickname'">
                    member_nickname like concat('%', #{keywordInput}, '%')
                </when>
                <when test="searchType == 'content'">
                    t_content like concat('%', #{keywordInput}, '%')
                </when>
            </choose>
        </if>
    </where>
</select>

<select id ="SearchWithBoard" parameterType="Map" resultType="Map">
    select w.t_idx, w.member_idx, w.t_subject, w.t_content, w.t_campname,w.t_regdate,t_active, m.member_nickname as member_nickname
	from board_with w
    join members m ON w.member_idx = m.member_idx
    <where>
        <if test="keywordInput != null and searchType != null">
            and
            <choose>
                <when test="searchType == 'nickname'">
                    member_nickname like concat('%', #{keywordInput}, '%')
                </when>
                <when test="searchType == 'content'">
                    t_content like concat('%', #{keywordInput}, '%')
                </when>
            </choose>
        </if>
    </where>
    limit #{limit} offset #{offset}
</select>

</mapper>