<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jun">
	<select id="getCampInfo" resultType="cvo">
		select * from camp_list where contentid = #{contentid}
	</select>
	<insert id="addReview" parameterType="rvo">
		insert into camp_review(member_idx,contentid,member_nickname,r_comment,rating,member_img,r_regdate)
		values(#{member_idx},#{contentid},#{member_nickname},#{r_comment},#{rating},#{member_img},sysdate())
	</insert>
	<select id="loadReview" resultType="rvo">
		select * from camp_review where contentid = #{contentid}
	</select>
	<update id="updateHit" parameterType="cvo">
		update camp_list set hit= hit+1 where contentid = #{contentid}
	</update>
	<insert id="addHeart" parameterType="Map">
		insert into camp_heart (member_idx,contentid)
		values(#{member_idx},#{contentid})
	</insert>
	<select id="checkHeart" parameterType="Map" resultType="String">
		select * from camp_heart where member_idx=#{member_idx} and contentid = #{contentid}	
	</select>
	<delete id="delHeart" parameterType="Map">
		delete from camp_heart where member_idx=#{member_idx} and contentid = #{contentid}
	</delete>
<select id="searchDetail" parameterType="Map" resultType="cvo">
    select *
    from camp_list 
    <where>
        <if test="s_sido != null and s_sido != ''">
    		AND donm = #{s_sido}
    	</if>
    	<if test="s_sigungu != null and s_sigungu != ''">
    		AND sigungunm = #{s_sigungu}
    	</if>
        <if test="keyword != null and keyword != ''">
            AND (facltnm LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="lctCl != null and lctCl != ''">
            AND lctCl = #{lctCl}
        </if>
        <if test="induty != null and induty != ''">
            AND induty = #{induty}
        </if>
        <if test="sbrscl != null and sbrscl != ''">
            AND sbrscl = #{sbrscl}
        </if>
    </where>
			limit #{limit} offset #{offset}
	</select>
<select id="searchCount" parameterType="Map" resultType="int">
    select count(*)
    from camp_list 
    <where>
        <if test="s_sido != null and s_sido != ''">
    		AND donm = #{s_sido}
    	</if>
    	<if test="s_sigungu != null and s_sigungu != ''">
    		AND sigungunm = #{s_sigungu}
    	</if>
        <if test="keyword != null and keyword != ''">
            AND (facltnm LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="lctCl != null and lctCl != ''">
            AND lctCl = #{lctCl}
        </if>
        <if test="induty != null and induty != ''">
            AND induty = #{induty}
        </if>
        <if test="sbrscl != null and sbrscl != ''">
            AND sbrscl = #{sbrscl}
        </if>
    </where>
</select>
<select id="countReview" parameterType="String" resultType="int">
	select count(*) from camp_review where contentid = #{contentid}
</select>
<select id="addRating" parameterType="String" resultType="int">
	select sum(rating) from camp_review where contentid = #{contentid}
</select>
<select id="getUseFAQLoad" parameterType="a2vo" resultType="map">
	select * from faq limit #{limit} offset #{offset}
</select>
<select id="getPromiseFAQLoad" parameterType="a2vo" resultType="map">
	select * from faq2 limit #{limit} offset #{offset}
</select>
<insert id ="writeUserFAQ" parameterType="a2vo">
	insert into faq(faq_title,faq_content)
	values(#{faq_title},#{faq_content})
</insert>
<insert id ="writePromiseFAQ" parameterType="a2vo">
	insert into faq2(faq_title,faq_content)
	values(#{faq_title},#{faq_content})
</insert>
<update id="StatusUserChange">
    update faq
    set faq_status = case
        when faq_status = '0' then '1'
        when faq_status = '1' then '0'
    end
    where faq_idx in
    <foreach collection="list" item="faq_idx" open="(" close=")" separator=",">
        #{faq_idx}
    </foreach>
</update>

<update id="StatusPromiseChange">
    update faq2
    set faq_status = case
        when faq_status = '0' then '1'
        when faq_status = '1' then '0'
    end
    where faq_idx in
    <foreach collection="list" item="faq_idx" open="(" close=")" separator=",">
        #{faq_idx}
    </foreach>
</update>
<select id="getUseFAQCount" resultType="int">
	select count(*) from faq
</select>
<select id="getPromiseFAQCount" resultType="int">
	select count(*) from faq2
</select>

</mapper>