<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- Create Account & Login & find ID and Pwd -->
	<insert id="insert" parameterType="mvo">
		insert into members(member_id, member_name, member_pwd, member_nickname, member_dob, member_phone, member_email, member_regdate)
			values(#{member_id}, #{member_name},#{member_pwd},#{member_nickname},#{member_dob}, #{member_phone},#{member_email}, sysdate())
	</insert>
	
	<select id="idchk" parameterType="String" resultType="int">
 		select count(*) from members where member_id=#{member_id}
 	</select>
 	
 	<select id="loginIdchk" parameterType="String" resultType="int">
 		select count(*) from members where member_id=#{member_id}
 	</select>
 	
 	<select id="login" parameterType="mvo" resultType="mvo">
 		select * from members where member_id=#{member_id}
 	</select>
 	
 	<select id="findPwd" parameterType="mvo" resultType="mvo">
		select * from members where member_id=#{member_id}
	</select>
	
	<update id="tempPwdUpdate" parameterType="mvo">
         update members
         set member_pwd=#{member_pwd}
         where member_id = #{member_id}
    </update>
    
    <select id="findId" parameterType="String" resultType="mvo">
		select * from members where member_name=#{member_name}
	</select>
	
	<select id="nickNameChk" parameterType="String" resultType="int">
 		select count(*) from members where member_nickname=#{member_nickname}
 	</select>
 	
 	<!-- Community Board -->
 	<select id="count" resultType="int">
 		select count(*) from board_free
 	</select>
 	
 	<!-- commBoard  -->
 	<!-- <select id="comm_board_list" parameterType="Map" resultType="cbvo">
 		select * from board_free order by groups member_grade  limit #{limit} offset #{offset}
		select * from board_free order by groups desc, lev asc  limit #{limit} offset #{offset} 
 	</select> -->
 	
 	<select id="comm_board_list" parameterType="Map" resultType="cbvo">
	    select * from board_free 
	    where b_type = '공지사항'
	    union 
	    select * from board_free 
	    where b_type != '공지사항' 
	    order by b_type = '공지사항' desc, groups desc, lev asc 
	    limit #{limit} offset #{offset}
	</select>
 	
 	<update id="comm_board_hit" parameterType="String">
 		update board_free 
 		set b_hit = b_hit + 1 
 		where b_idx = #{b_idx} 
 	</update>
 	
 	<insert id="comm_board_insert" parameterType="cbvo">
 		<selectKey keyProperty="groups" resultType="String" order="BEFORE">
 			SELECT (IFNULL(MAX(b_idx),0)+1) as groups FROM board_free
 		</selectKey>
 		insert into board_free(member_idx, b_type, b_subject, member_nickname, b_content, b_pwd, b_hit, groups, step, lev, b_regdate, bf_name)
 			values(#{member_idx}, #{b_type}, #{b_subject}, #{member_nickname}, #{b_content},#{b_pwd}, 0, #{groups}, 0, 0, sysdate(), #{bf_name})
 	</insert>
 	
 	<select id="comm_board_detail" parameterType="String" resultType="cbvo">
 		select * from board_free where b_idx = #{b_idx}
 	</select>
 	
 	<delete id="comm_board_delete" parameterType="cbvo">
 	 	delete from board_free where b_idx = #{b_idx}
 	</delete>
 	
 	<update id="comm_board_update" parameterType="cbvo">
 	 	update board_free 
 	 	set  b_subject=#{b_subject}, b_content=#{b_content}, bf_name=#{bf_name}
 	 	where b_idx = #{b_idx}  	 
 	 </update>
 	 
 	 <delete id="comm_board_admin_delete" parameterType="cbvo">
 	 	delete from board_free where b_idx = #{b_idx}
 	 </delete>
 	 
 	  <insert id="comm_reply_insert" parameterType="cbvo">
 	 	insert into board_free(member_idx, b_type, b_subject, member_nickname, b_content, b_pwd, b_hit, groups, step, lev, b_regdate, bf_name)
 			values(#{member_idx}, #{b_type}, #{b_subject}, #{member_nickname}, #{b_content},#{b_pwd}, 0, #{groups}, 0, 0, sysdate(), #{bf_name})
 	  </insert>
 	 
 	 <select id="comm_board_reply_detail" parameterType="cbvo" resultType="cbvo">
 		select * from board_free where b_idx = #{b_idx}
 	 </select>
 	
 	<!-- commet-rely -->
 	<select id="comment_list" parameterType="String" resultType="covo">
 		select * from comment_t where b_idx = #{b_idx}
 	</select>
 	
 	<!-- <insert id="comment_insert" parameterType="covo">
 		insert into comment_t(member_nickname, content, write_date, b_idx)
 			values(#{member_nickname}, #{content}, sysdate(), #{b_idx})
 	</insert> -->
 	
 <!-- 	<insert id="comment_insert" parameterType="covo">
 		<selectKey keyProperty="groups" resultType="String" order="BEFORE">
 			SELECT (IFNULL(MAX(b_idx),0)+1) as groups FROM board_free
 		</selectKey>
 		insert into board_free(member_idx, b_type, b_subject, member_nickname, b_content, b_pwd, b_hit, groups, step, lev, b_regdate, bf_name)
 			values(#{member_idx}, #{b_type}, #{b_subject}, #{member_nickname}, #{b_content},#{b_pwd}, 0, #{groups}, 0, 0, sysdate(), #{bf_name})
 	</insert>
 	 -->
 	 
 	 
 	 
 	 
 	<insert id="comment_insert" parameterType="covo">
 		<selectKey keyProperty="groups" resultType="String" order="BEFORE">
 			SELECT (IFNULL(MAX(b_idx),0)+1) as groups FROM comment_t
 		</selectKey>
 		insert into comment_t(member_nickname, content, write_date, b_idx, groups, step, lev)
 			values(#{member_nickname}, #{content}, sysdate(), #{b_idx}, #{groups}, 0, 0)
 	</insert>
 	
 	
 	
 	
 	
 	
 	
 	<delete id="comment_delete" parameterType="String">
 		delete from comment_t where c_idx = #{c_idx}
 	</delete>
 	
 	<update id="comment_update" parameterType="covo">
 		update comment_t 
 		set content = #{content}, write_date = sysdate()
 	    where b_idx=#{b_idx} and c_idx = #{c_idx}
 	</update>
 	
 	<select id="comment_reply_list" parameterType="String" resultType="covo">
 		select * from comment_t where b_idx = #{b_idx}
 	</select>
 	
 	
 	
 	
 	
 	<update id="comm_lev_update" parameterType="Map">
 	 	update comment_t set lev=lev+1 where groups=#{groups} and lev>=#{lev} 
 	 </update>
 	
 	
 	
 	
 	
 	
 	
 	

 	 
 	 <insert id="comment_reply_insert" parameterType="covo">
 	 	insert into comment_t(member_nickname, content, write_date, b_idx, step, lev)
 			values(#{member_nickname}, #{content}, sysdate(), #{b_idx}, #{step}, #{lev})
 	 </insert>
 	 
 	 
 	<select id="board_free_list" resultType="bfvo">
 		select * from board_free where bf_no &gt;= 1 and bf_no &lt;= 100  order by bf_no
 	</select>
 	
 	<select id="board_free_search_list" parameterType="Map" resultType="bfvo">
 		select * from board_free where 
 		<choose>
 			<!-- <when test="searchType == 1"> Lower(b_title) = Lower(#{searchValue})</when> -->
 			
 			<when test="searchType == 1"> Lower(b_subject) like concat('%', Lower(#{searchValue}),'%')</when>
 			<when test="searchType == 2"> Lower(b_content) like concat('%', Lower(#{searchValue}), '%')</when>
 			<when test="searchType == 3"> Lower(member_nickname) = Lower(#{searchValue})</when>
 			<when test="searchType == 4"> Lower(b_regdate) like concat( Lower(#{searchValue}), '%')</when>
 		</choose>
 		
 	</select>
 	
 	<select id="member" parameterType="String" resultType="covo">
 		select * from comment_t where b_idx=#{b_idx}
 	</select>
 		
 	
 	 <insert id="ans_insert1" parameterType="covo">
 	 	insert into comment_t(member_nickname, content, write_date, b_idx, groups, step, lev)
 			values(#{member_nickname}, #{content}, sysdate(), #{b_idx}, #{groups}, #{step}, #{lev})
 	 </insert>
 	 
 	<!--  <insert id="ans_insert" parameterType="covo">
 	 	insert into comment_t(member_nickname, content, write_date, b_idx, step, lev)
 			values(#{member_nickname}, #{content}, sysdate(), #{b_idx}, #{step}, #{lev})
 	 </insert> -->
 	
 	
 	
 	<select id="commet_reply_detail" parameterType="String" resultType="covo">
 		select * from comment_t where c_idx = #{c_idx}
 	</select>
 	
 	
 	
 	
 	
 	
 	<!-- 캠핑제품추천게시판  -->
 	
 	<!-- 전체 게시물수  -->
 	<select id="cgb_count" resultType="int">
 		select count(*) from board_camp
 	</select>
 	
 	<!-- 리스트 -->
 	<select id="cgb_list" parameterType="Map" resultType="cgbvo">
 		select * from board_camp order by groups desc, lev asc  limit #{limit} offset #{offset}  
 	</select>
 	
 	<!-- 게시판 글쓰기 삽입  -->
 	<insert id="camping_gear_write_insert" parameterType="cgbvo">
 		<selectKey keyProperty="groups" resultType="String" order="BEFORE">
 			SELECT (IFNULL(MAX(cp_idx),0)+1) as groups FROM board_camp
 		</selectKey>
 		insert into board_camp(member_idx, cp_subject, member_nickname, cp_content, cp_pwd, cpf_name, cp_regdate, cp_hit, cp_active, cp_notice, groups, step, lev)
 			values(#{member_idx}, #{cp_subject}, #{member_nickname}, #{cp_content},#{cp_pwd},#{cpf_name}, sysdate(), 0, 0, 0, #{groups}, 0, 0)
 	</insert>
 	
 	
 	<!-- 게시판 조회수 -->
 	<update id="camping_gear_hit" parameterType="String">
 		update board_camp 
 		set cp_hit = cp_hit + 1 
 		where cp_idx = #{cp_idx} 
 	</update>
 
 	<!-- 게시판 개인정보 상세보기 -->
 	<select id="camping_gear_detail" parameterType="String" resultType="cgbvo">
 		select * from board_camp where cp_idx = #{cp_idx}
 	</select>
 	
 	<!-- 게시판 수정 -->
 	<update id="camping_gear_update" parameterType="cgbvo">
 	 	update board_camp 
 	 	set  cp_subject=#{cp_subject}, cp_content=#{cp_content}, cpf_name=#{cpf_name}
 	 	where cp_idx = #{cp_idx}  	 
 	 </update>
 	 
 	 <!-- 게시판 삭제 -->
 	 <delete id="camping_gear_delete" parameterType="cgbvo">
 	 	delete from board_camp where cp_idx = #{cp_idx}
 	 </delete>
 	 
 	 <!-- 관리자 게시판 강제 삭제 -->
 	 <delete id="camping_gear_admin_delete" parameterType="cgbvo">
 	 	delete from board_camp where cp_idx = #{cp_idx}
 	 </delete>
 	 
 	 
 	 
 	 
 	 
 	 
 	 <!-- 캠핑추천게시판 댓글 목록 가져오기 -->
 	 <select id="camping_gear_comment_list" parameterType="String" resultType="cgbcvo">
 		select * from cgb_comment where cp_idx = #{cp_idx}
 	 </select>
 	 
 	 
 	 <!-- 댓글 삽입 -->
 	 <insert id="camping_gear_comment_insert" parameterType="cgbcvo">
 		<selectKey keyProperty="groups" resultType="String" order="BEFORE">
 			SELECT (IFNULL(MAX(cp_idx),0)+1) as groups FROM cgb_comment
 		</selectKey>
 		insert into cgb_comment(member_nickname, content, write_date, cp_idx, groups, step, lev)
 			values(#{member_nickname}, #{content}, sysdate(), #{cp_idx}, #{groups}, 0, 0)
 	</insert>
 	
 	<!-- 댓글 삭제 -->
 	<delete id="camping_gear_comment_delete" parameterType="String">
 		delete from cgb_comment where c_idx = #{c_idx}
 	</delete>
 	
 	<!-- 댓글 수정 -->
 	<update id="camping_gear_comment_update" parameterType="cgbcvo">
 		update cgb_comment 
 		set content = #{content}, write_date = sysdate()
 	    where cp_idx=#{cp_idx} and c_idx = #{c_idx}
 	</update>
 	
 	<!-- 댓글댓글 -->
 	<select id="camping_gear_comment_reply_list" parameterType="String" resultType="cgbcvo">
 		select * from cgb_comment where cp_idx = #{cp_idx}
 	</select>
 	
 	<!-- 댓글댓글 -->
 	<update id="camping_gear_comm_lev_update" parameterType="Map">
 	 	update cgb_comment set lev=lev+1 where groups=#{groups} and lev>=#{lev} 
 	 </update>
 	 
 	 <!-- 댓글댓글 -->
 	 <insert id="camping_gear_ans_insert" parameterType="cgbcvo">
 	 	insert into cgb_comment(member_nickname, content, write_date, cp_idx, groups, step, lev)
 			values(#{member_nickname}, #{content}, sysdate(), #{cp_idx}, #{groups}, #{step}, #{lev})
 	 </insert>
 	 
 	 <select id="camping_gear_reply_detail" parameterType="String" resultType="cgbcvo">
 		select * from cgb_comment where c_idx = #{c_idx}
 	</select>
 	
 
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
</mapper>